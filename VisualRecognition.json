[{"id":"2092a973.0b9636","type":"change","z":"1004a93f.5cfdf7","name":"Extract image URL","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.imageurl","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":625,"y":105,"wires":[["194baf0d.07ff61"]]},{"id":"542f526c.d8e5e4","type":"switch","z":"1004a93f.5cfdf7","name":"Check image url","property":"payload.imageurl","propertyType":"msg","rules":[{"t":"null"},{"t":"else"}],"checkall":"true","repair":false,"outputs":2,"x":375,"y":65,"wires":[["636103a6.4a0f14"],["2092a973.0b9636"]]},{"id":"ef76dfce.6a41d","type":"http in","z":"1004a93f.5cfdf7","name":"","url":"/nicelydone","method":"get","upload":false,"swaggerDoc":"","x":135,"y":65,"wires":[["542f526c.d8e5e4"]]},{"id":"636103a6.4a0f14","type":"template","z":"1004a93f.5cfdf7","name":"Simpe Web Page","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<h1>Welcome to a Global Universities Program</h1>\n<hr>\n<h2>Create a Watson Visual Recognition Custom Classifier</h2>\n<p>Upload 10 images and train a Watson Visual Recognition Custom Classifier</p>\n\n<form action=\"/upload2zip_post\" method=\"POST\" enctype=\"multipart/form-data\">\n    <br>Step 1: Submit a name for this Custom Classifier:<br>\n    <input type=\"text\" name=\"ClassifierName\"/>\n    <br><br>Step 2: Select (10 or more) POSITIVE .png/.jpg files to be uploaded and zipped:<br>\n    <input type=\"file\" name=\"Positive\" multiple/>\n    <br><br>Step 3: Select (10 or more) NEGATIVE .png/.jpg files to be uploaded and zipped:<br>\n    <input type=\"file\" name=\"Negative\" multiple/>\n    <br><br>Step 4: Train a custom classifier<br>\n    <input type=\"submit\" value=\"Zip and Train\">\n</form>\n<hr>\n<h2>Test Watson Visual Recognition</h2>\n<p>Copy/Paste a URL to any image on the Internet to be classified:</p>\n<form  action=\"{{req._parsedUrl.pathname}}\">\n    <br/>Paste the URL in the box below.<br/>\n    <br>Image URL: <input type=\"text\" name=\"imageurl\"/>\n    <input type=\"submit\" value=\"Analyze Image URL\"/>\n</form>\n<hr>\n<p>Upload a file to be classified:</p>\n\n<form action=\"/uploadsimple_post\" method=\"POST\" enctype=\"multipart/form-data\">\n    <input type=\"file\" name=\"myFile\"/>\n    <input type=\"submit\" value=\"Analyze File\">\n</form>\n<hr>","x":825,"y":65,"wires":[["bb40e11a.7e86b8"]]},{"id":"bb40e11a.7e86b8","type":"http response","z":"1004a93f.5cfdf7","name":"","statusCode":"","headers":{},"x":1085,"y":345,"wires":[]},{"id":"fa02953b.7440e8","type":"debug","z":"1004a93f.5cfdf7","name":"Print msg.result.images","active":true,"console":"false","complete":"result.images","x":645,"y":405,"wires":[]},{"id":"ae8933a8.23937","type":"comment","z":"1004a93f.5cfdf7","name":"Step #1 - Create a Visual Recognition Service","info":"1. Log into your Bluemix account\n2. Navigate to the Bluemix Catalog\n3. Scroll to the Watson Services section\n4. Find and click on the Visual Recognition service\n5. Create an unbounded Visual Recognition instance\n6. Open the new service and navigate to the Service Credentials\n7. Copy the api_key to the clipboard\n8. Open the above \"visual recognition v3\" node and paste your new API Key","x":275,"y":425,"wires":[]},{"id":"5364ea10.33b064","type":"function","z":"1004a93f.5cfdf7","name":"Process Results - Multiple Classifiers","func":"if (typeof msg.result == 'undefined') {\n    return null;\n}\n\nif (typeof msg.result.error != 'undefined') {\n    //The Lite Plan allows users to make 7,500 API calls for free\n    // Daily limit is  (up to 250 calls per day)\n    // {\"status\":\"ERROR\",\"statusInfo\":\"Key is over transaction limit\"}\n    msg.template = msg.result.error.message;\n    return msg;\n}\n\n// Text Extraction\nif (typeof msg.result.images[0].text != 'undefined') {\n    var image_text = msg.result.images[0].text;\n    msg.payload = image_text;\n    msg.template = image_text;\n    if( image_text.length >0 ) {\n       msg.template= \"Watson found the words: \"+image_text;\n    }\n    return msg;\n}\n\nvar c_id = 0;\nvar WhichClassifier = [];\n\nfor ( c_id=0; c_id < (msg.result.images[0].classifiers.length); c_id++ ){\n    var bestcolor = -1;\n    var colorscore = 0;\n    var item = \"\";\n    // find the best color, if any\n    for( i =0; i<(msg.result.images[0].classifiers[c_id].classes.length); i++ ){\n      if( typeof msg.result.images[0].classifiers[c_id].classes[i] != 'undefined') {\n          if( typeof msg.result.images[0].classifiers[c_id].classes[i].class != 'undefined') {\n              var object = msg.result.images[0].classifiers[c_id].classes[i].class;\n              if ( object.includes(\"color\") ) {\n                if( msg.result.images[0].classifiers[c_id].classes[i].score > colorscore){\n                    bestcolor = i;\n                    colorscore = msg.result.images[0].classifiers[c_id].classes[i].score;\n                }\n              }\n          }  \n      }  \n    }\n\n    var bestItem = 0;\n    var itemScore = 0;\n    for( i =0; i<(msg.result.images[0].classifiers[c_id].classes.length); i++ ){\n      if( typeof msg.result.images[0].classifiers[c_id].classes[i] != 'undefined') {\n        if( typeof msg.result.images[0].classifiers[c_id].classes[i].class != 'undefined') {\n          var object = msg.result.images[0].classifiers[c_id].classes[i].class;\n          if ( !object.includes(\"color\") ) {\n           if( msg.result.images[0].classifiers[c_id].classes[i].score > itemScore){\n  //            bestItem = i;\n              bestItem = 0;\n              itemScore =  msg.result.images[0].classifiers[c_id].classes[i].score;\n              }\n          }\n        }\n      }  \n    }\n\n     if( bestcolor != \"-1\") {\n        // found a color\n        if( msg.result.images[0].classifiers[c_id].classes.length > 0) {\n            if( typeof msg.result.images[0].classifiers[c_id].classes[bestcolor].class != 'undefined') {\n                item = msg.result.images[0].classifiers[c_id].classes[bestcolor].class + \" \" + msg.result.images[0].classifiers[c_id].classes[bestItem].class;\n            }\n        }\n        bestcolor = -1;\n    } else {\n       if( msg.result.images[0].classifiers[c_id].classes.length > 0) {\n           if( typeof msg.result.images[0].classifiers[c_id].classes[bestItem].class != 'undefined') {\n                item = msg.result.images[0].classifiers[c_id].classes[bestItem].class;\n           }     \n       }     \n    }\n    \n    WhichClassifier.push(\"Watson's \" + msg.result.images[0].classifiers[c_id].name + \" classifier thinks this picture contains a \" + item +\".<br>\");\n}\n\nvar picInfo = msg.result.images[0].classifiers[0].classes;\nvar arrayLength = picInfo.length;\nif( typeof(msg.result.images[0].resolved_url) != 'undefined' ) {\n   msg.template=\"<p>Analyzed image: \"+ msg.result.images[0].resolved_url+\"<br/><img src=\"+msg.result.images[0].resolved_url+\" height=\\\"200\\\"/></p>\";\n} else {\n   msg.template = \"<p>Analyzed image: \"+ msg.mypic;\n}\nmsg.template=msg.template+\"<style>\";\nmsg.template=msg.template+\"table { width: 440px; margin-top: 10px; }\";\nmsg.template=msg.template+\"tr:nth-child(even){background-color: #f2f2f2;}\";\nmsg.template=msg.template+\"th, td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; width: 10%;}\";\nmsg.template=msg.template+\"</style>\";\n\n// 1st Table\nmsg.template=msg.template+\"<h2>\"+WhichClassifier[0]+\"</h2><table span=100%><tr><th>Class</th><th>Confidence</th></tr>\";\nfor (var i = 0; i < arrayLength; i++) {\n  msg.template = msg.template + \"<tr><td>\" + picInfo[i].class + \"</td><td>\" + picInfo[i].score + \"</td></tr>\";\n}\nmsg.template = msg.template + \"</table>\";\n\n// More than one classifier?\nif( msg.result.images[0].classifiers.length == 1 ) {\n    msg.payload=msg.template;\n    return msg;\n}\n\n// Next Classifier\npicInfo = msg.result.images[0].classifiers[1].classes;\narrayLength = picInfo.length;\n\n// 2nd Table\nmsg.template=msg.template+\"<h2>\"+WhichClassifier[1]+\"</h2><table span=100%><tr><th>Class</th><th>Confidence</th></tr>\";\nfor ( i = 0; i < arrayLength; i++) {\n  msg.template = msg.template + \"<tr><td>\" + picInfo[i].class + \"</td><td>\" + picInfo[i].score + \"</td></tr>\";\n}\nmsg.template = msg.template + \"</table>\";\nmsg.payload=msg.template;\nreturn msg;\n","outputs":1,"noerr":0,"x":685,"y":365,"wires":[["bb40e11a.7e86b8"]]},{"id":"49397d57.106ab4","type":"visual-recognition-v3","z":"1004a93f.5cfdf7","name":"","vr-service-endpoint":"https://gateway.watsonplatform.net/visual-recognition/api","image-feature":"classifyImage","lang":"en","x":305,"y":385,"wires":[["fa02953b.7440e8","5364ea10.33b064"]]},{"id":"ddb5536e.7903","type":"function","z":"1004a93f.5cfdf7","name":"Process Results - One Classifier","func":"if (typeof msg.result == 'undefined') {\n    return null;\n}\n\nif (typeof msg.result.error != 'undefined') {\n    //The Lite Plan allows users to make 7,500 API calls for free\n    // Daily limit is  (up to 250 calls per day) \n    // {\"status\":\"ERROR\",\"statusInfo\":\"Key is over transaction limit\"}\n    msg.template = msg.result.error.message;\n    return msg;\n}\n\n// Text Extraction\nif (typeof msg.result.images[0].text != 'undefined') {\n    var image_text = msg.result.images[0].text;\n    msg.payload = image_text;\n    msg.template = image_text;\n    if( image_text.length >0 ) {\n       msg.template= \"Watson found the words: \"+image_text;\n    }\n    return msg;\n}\n\nvar bestcolor = -1;\nvar colorscore = 0;\nvar c_id = 0;\nvar say = \"\";\nvar item;\n\nfor ( c_id=0; c_id < (msg.result.images[0].classifiers.length); c_id++ ){\n    // find the best color, if any\n    for( i =0; i<(msg.result.images[0].classifiers[c_id].classes.length); i++ ){\n      var object = msg.result.images[0].classifiers[c_id].classes[i].class;\n      if ( object.includes(\"color\") ) {\n        if( msg.result.images[0].classifiers[c_id].classes[i].score > colorscore){\n            bestcolor = i;\n            colorscore = msg.result.images[0].classifiers[c_id].classes[i].score;\n        }\n      }\n    }\n \n    var bestItem = 0;\n    var itemScore = 0;\n    for( i =0; i<(msg.result.images[0].classifiers[c_id].classes.length); i++ ){\n      var object = msg.result.images[0].classifiers[c_id].classes[i].class;\n      if ( !object.includes(\"color\") ) {\n        if( msg.result.images[0].classifiers[c_id].classes[i].score > itemScore){\n//            bestItem = i;\n            bestItem = 0;\n            itemScore =  msg.result.images[0].classifiers[c_id].classes[i].score;\n        }\n      }\n    }\n \n     if( bestcolor != \"-1\") {\n        // found a color\n        item = msg.result.images[0].classifiers[c_id].classes[bestcolor].class + \" \" + msg.result.images[0].classifiers[c_id].classes[bestItem].class;\n        bestcolor = -1;\n    } else {\n       item = msg.result.images[0].classifiers[c_id].classes[bestItem].class;\n    }\n//    say = say + \" Watson's \" + msg.result.images[0].classifiers[c_id].name + \" classifier thinks this picture contains a \" + item +\".\";\n    say = say + \" Watson thinks this picture contains a \" + item +\".\";\n}\nmsg.payload =  say;\n\nvar picInfo = msg.result.images[0].classifiers[0].classes;\nvar arrayLength = picInfo.length;\nmsg.template=\"<p>Analyzed image: \"+ msg.result.images[0].resolved_url+\"<br/><img src=\"+msg.result.images[0].resolved_url+\" height=\\\"200\\\"/></p>\";\nmsg.template=msg.template+\"<style>\";\nmsg.template=msg.template+\"table { width: 440px; margin-top: 10px; }\";\nmsg.template=msg.template+\"tr:nth-child(even){background-color: #f2f2f2;}\";\nmsg.template=msg.template+\"th, td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; width: 10%;}\";\nmsg.template=msg.template+\"</style>\";\n\nmsg.template=msg.template+\"<h2>\"+say+\"</h2><table span=100%><tr><th>Class</th><th>Confidence</th></tr>\";\nfor (var i = 0; i < arrayLength; i++) {\n  msg.template = msg.template + \"<tr><td>\" + picInfo[i].class + \"</td><td>\" + picInfo[i].score + \"</td></tr>\";\n}\nmsg.template = msg.template + \"</table>\";\nmsg.payload = msg.template;\nreturn msg;","outputs":1,"noerr":0,"x":695,"y":325,"wires":[["bb40e11a.7e86b8"]]},{"id":"f0ef9fc6.eec2","type":"debug","z":"1004a93f.5cfdf7","name":"","active":true,"tosidebar":true,"console":false,"complete":"req.files","x":365,"y":185,"wires":[]},{"id":"5ddcdbd4.0f67dc","type":"comment","z":"1004a93f.5cfdf7","name":"Simple file upload example","info":"http://localhost:1880/upload","x":145,"y":185,"wires":[]},{"id":"f2a22e2.39291d","type":"http in","z":"1004a93f.5cfdf7","name":"","url":"/uploadsimple_post","method":"post","upload":true,"swaggerDoc":"","x":145,"y":225,"wires":[["f0ef9fc6.eec2","eb7d1dac.b86e3"]]},{"id":"eb7d1dac.b86e3","type":"change","z":"1004a93f.5cfdf7","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"req.files[0].buffer","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":385,"y":225,"wires":[["cb94b1df.7bf428"]]},{"id":"cb94b1df.7bf428","type":"function","z":"1004a93f.5cfdf7","name":"Save Picture Buffer","func":"if (msg.req.files[0].mimetype.includes('image')) {\n    msg.mypic = `<img src=\"data:image/gif;base64,${msg.payload.toString('base64')}\">`;\n} else {\n    msg.payload = msg.payload.toString();\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":625,"y":225,"wires":[["194baf0d.07ff61"]]},{"id":"a4fd851f.8d0b48","type":"comment","z":"1004a93f.5cfdf7","name":"Multiple file upload","info":"","x":165,"y":485,"wires":[]},{"id":"cc0ad453.1c1d28","type":"http in","z":"1004a93f.5cfdf7","name":"","url":"/upload2zip_post","method":"post","upload":true,"swaggerDoc":"","x":175,"y":525,"wires":[["b5f55411.9e981","309b653.821b39a"]]},{"id":"b5f55411.9e981","type":"debug","z":"1004a93f.5cfdf7","name":"","active":true,"tosidebar":true,"console":false,"complete":"req.files","x":405,"y":485,"wires":[]},{"id":"309b653.821b39a","type":"function","z":"1004a93f.5cfdf7","name":"Construct Zip File attributes","func":"// Confirm that all the files are images\nvar NumImages = msg.req.files.length ;\nvar AllImages = true;\n\n// Watson Visual Recognition requires a minimum of 10 images\n// to train a custom classifier\nif( NumImages < 2 ) {\n    msg.payload = \"Watson Visual Recognition requires a minimum of 10 images to train a custom classifier\";\n    return [msg, null] ;\n}\n\nfor( var i = 0; i < NumImages ; i++ ) {\n   if ( !msg.req.files[i].mimetype.includes('image')) {\n       // At least one file is not an image, throw an error\n       AllImages = false ;\n   }\n}\nif( !AllImages ) {\n    msg.payload = \"Error Not all files are .png / .jpg image files\";\n    return [msg, null] ;\n}\n\n// Step 1:\n// Install the node-red-contrib-zip Node-RED node\n//\n// Step 2:\n// Construct a msg.payload of an Array of files to be compressed into a ZIP object.\n// The ZipFile name is specified with msg.filename\n// Array: An array of objects containing 'filename' as a String and 'payload' as a Buffer/String\n// each representing one file in the resultiing zip\n\nvar PosZipArray = [];\nvar NegZipArray = [];\nfor( i = 0; i < NumImages ; i++ ) {\n    if( msg.req.files[i].fieldname == \"Positive\") {\n        PosZipArray.push( { \"filename\":msg.req.files[i].originalname, \"payload\":msg.req.files[i].buffer }) ;\n    } else if ( msg.req.files[i].fieldname == \"Negative\") {\n        NegZipArray.push( { \"filename\":msg.req.files[i].originalname, \"payload\":msg.req.files[i].buffer }) ;\n    }\n}\nmsg.filename = msg.payload.ClassifierName;\n// Zip the Positive Example files first\nmsg.payload = PosZipArray ;\n// Store the Negative Examples for a second zip\nmsg.NegativeExamples = NegZipArray ;\n\nreturn [null,msg];","outputs":2,"noerr":0,"x":455,"y":525,"wires":[["bb40e11a.7e86b8"],["4a3dd0de.319688","746ad607.2d547","40acf107.1613e"]]},{"id":"4a3dd0de.319688","type":"change","z":"1004a93f.5cfdf7","name":"Success","rules":[{"t":"set","p":"payload","pt":"msg","to":"Zip file created!  Watson Visual Recognition is Training a custom classifier","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":755,"y":505,"wires":[["bb40e11a.7e86b8"]]},{"id":"746ad607.2d547","type":"debug","z":"1004a93f.5cfdf7","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":745,"y":545,"wires":[]},{"id":"97032c30.87c618","type":"visual-recognition-util-v3","z":"1004a93f.5cfdf7","name":"","vr-service-endpoint":"https://gateway-a.watsonplatform.net/visual-recognition/api","image-feature":"createClassifier","x":515,"y":705,"wires":[["8034abc5.4142f","329a3d81.ff3752"]]},{"id":"302a4e6e.723f42","type":"function","z":"1004a93f.5cfdf7","name":"Prepare to Create a Classifier","func":"// Create a Classifier\n//  Provide the following input :\n//   msg.params[\"name\"] : a string name that will be used as prefix for the returned classifier_id (Required)\n//   msg.params[\"{classname}_positive_examples\"] : a Node.js binary Buffer of the ZIP that contains a minimum of 10 images. (Required)\n//   msg.params[\"negative_examples\"] : a Node.js binary Buffer of the ZIP that contains a minimum of 10 images.(Optional)\n//\n// More information on this API documentation.\n//   https://cloud.ibm.com/apidocs/visual-recognition#create-a-classifier\n\nvar classnamepos = msg.filename+\"_positive_examples\";\nmsg.params = {} ;\nmsg.params.name = msg.filename ;\nmsg.params.negative_examples = msg.payload\nmsg.params[classnamepos] = msg.PositiveExamplesZipped // zip file!\n\n// don't bother sending a big zip file to the Watson Visual Recognition Util node\n//msg.payload = \"\"; \n\nreturn msg ;","outputs":1,"noerr":0,"x":205,"y":705,"wires":[["97032c30.87c618","85e3f23e.082568"]]},{"id":"8034abc5.4142f","type":"debug","z":"1004a93f.5cfdf7","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"result","targetType":"msg","x":745,"y":765,"wires":[]},{"id":"1829d673.4c95aa","type":"change","z":"1004a93f.5cfdf7","name":"Zip 2nd Set of Examples","rules":[{"t":"set","p":"PositiveExamplesZipped","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"NegativeExamples","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":445,"y":625,"wires":[["c93859ec.4bdb5"]]},{"id":"85e3f23e.082568","type":"debug","z":"1004a93f.5cfdf7","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"params","targetType":"msg","x":485,"y":765,"wires":[]},{"id":"329a3d81.ff3752","type":"change","z":"1004a93f.5cfdf7","name":"","rules":[{"t":"set","p":"CustomClassifier","pt":"flow","to":"result.classifier_id","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":785,"y":705,"wires":[["d89d17e1.192af8"]]},{"id":"194baf0d.07ff61","type":"function","z":"1004a93f.5cfdf7","name":"Custom Classifier","func":"var CustomClassifier = flow.get(\"CustomClassifier\") || \"\";\nmsg.params = {};\n\n// Check if a Custom Classifier has been trained\nif( CustomClassifier.length ) {\n    msg.params.classifier_ids = CustomClassifier + \",default\" ;\n} else {\n    msg.params.classifier_ids = \"default\" ;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":855,"y":165,"wires":[["49397d57.106ab4","2673e4a4.4b5664"]]},{"id":"2673e4a4.4b5664","type":"debug","z":"1004a93f.5cfdf7","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"params","targetType":"msg","x":1085,"y":165,"wires":[]},{"id":"9414ad20.a05f7","type":"inject","z":"1004a93f.5cfdf7","name":"Store a PreBuilt Custom Classifier ID","topic":"","payload":"YourCustomClassifier_1724727066","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":225,"y":825,"wires":[["fedb0a64.3ca74"]]},{"id":"fedb0a64.3ca74","type":"change","z":"1004a93f.5cfdf7","name":"","rules":[{"t":"set","p":"CustomClassifier","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":525,"y":825,"wires":[[]]},{"id":"d89d17e1.192af8","type":"template","z":"1004a93f.5cfdf7","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"Please wait for the {{result.classifier_id}} to complete training.","output":"str","x":995,"y":705,"wires":[["2b293099.b8bae"]]},{"id":"2b293099.b8bae","type":"debug","z":"1004a93f.5cfdf7","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":1165,"y":705,"wires":[]},{"id":"40acf107.1613e","type":"zip","z":"1004a93f.5cfdf7","name":"Zip Positive Examples","mode":"compress","filename":"","outasstring":false,"x":195,"y":625,"wires":[["1829d673.4c95aa"]]},{"id":"c93859ec.4bdb5","type":"zip","z":"1004a93f.5cfdf7","name":"Zip Negative Examples","mode":"compress","filename":"","outasstring":false,"x":705,"y":625,"wires":[["302a4e6e.723f42"]]}]